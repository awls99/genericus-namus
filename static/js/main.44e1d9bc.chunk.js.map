{"version":3,"sources":["models/models.js","Components/CharCard.tsx","Components/Roster.tsx","reportWebVitals.ts","Components/helpers/ScrollTo.tsx","Components/TopBar.tsx","Components/About.tsx","Components/HallOfFame.tsx","models/classColors.enum.ts","Components/MplusRuns.tsx","index.tsx"],"names":["exports","__esModule","MediaType","verified","achievents","achievementMap","map","achievement","Tooltip","title","name","id","CharChard","character","mediaUrl","media","find","asset","key","INSET","value","Card","raised","variant","CardMedia","component","image","CardContent","Typography","gutterBottom","achievements","color","level","playable_class","en_GB","Roster","filteredRoster","roster","filter","char","sort","char1","char2","rank","Paper","sx","padding","Grid","container","spacing","xs","md","lx","columns","sm","index","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollTo","props","children","anchorId","Box","onClick","event","anchor","target","ownerDocument","document","querySelector","scrollIntoView","behavior","block","TopBar","AppBar","position","Toolbar","Avatar","alt","src","flexGrow","Button","About","marginTop","images","HallOfFame","ClassColors","marginBottom","ImageList","cols","ImageListItem","url","loading","ImageListItemBar","subtitle","desc","MplusRuns","guildRuns","JSON","parse","stringify","runs","run1","run2","date","run","GuildRunChard","href","dungeon","ClassColloredNames","names","Avatars","success","elements","avatar","AVATAR","Stack","direction","getClassColor","klass","member","toUpperCase","theme","createTheme","palette","mode","primary","main","grey","secondary","ReactDOM","render","StrictMode","CssBaseline","ThemeProvider","Container","maxWidth","getElementById"],"mappings":"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","file":"static/js/main.44e1d9bc.chunk.js","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports.MediaType = void 0;\nvar MediaType;\n(function (MediaType) {\n    MediaType[\"AVATAR\"] = \"avatar\";\n    MediaType[\"INSET\"] = \"inset\";\n    MediaType[\"MAIN\"] = \"main\";\n    MediaType[\"MAINRAW\"] = \"main-raw\";\n})(MediaType = exports.MediaType || (exports.MediaType = {}));\n","import React from 'react';\nimport Item from \"@mui/material/Grid\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport { EnrichedCharacter, MediaType } from '../models/models';\nimport VerifiedIcon from '@mui/icons-material/Verified';\nimport StarIcon from '@mui/icons-material/Star';\nimport { AchievementCriteria } from '../models/achievements';\nimport { Tooltip } from '@mui/material';\n\nfunction CharChard(character: EnrichedCharacter) {\n  const mediaUrl = character.media?.find((asset) => { return asset.key === MediaType.INSET })?.value;\n  return (\n    <Item>\n      <Card raised={true} variant=\"outlined\">\n        <CardMedia\n          component=\"img\"\n          image={mediaUrl}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\n            {character.name} {character.achievements[0] ? verified(character.achievements) : \"\"}\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Level {character.level} {character.playable_class?.name?.en_GB}\n          </Typography>\n        </CardContent>\n      </Card>\n    </Item>\n  );\n}\n\nfunction verified(achievents: AchievementCriteria[]) {\n  const achievementMap:{[key: number]:any} = {\n    15499: <VerifiedIcon/>,\n    15309: <StarIcon />\n  };\n  return achievents.map((achievement) => {\n    return <Tooltip title={achievement.achievement.name}>{achievementMap[achievement.achievement.id]}</Tooltip>\n  });\n}\n\nexport default CharChard;\n","import React from 'react';\nimport roster from \"../json/roster.json\";\nimport Grid from \"@mui/material/Grid/Grid\";\nimport CharChard from './CharCard';\nimport { EnrichedCharacter } from '../models/models';\nimport { Paper, Typography } from '@mui/material';\nfunction Roster() {\n  const filteredRoster: EnrichedCharacter[] = roster\n    .filter((char) => { return char.level === 60 })\n    .sort((char1, char2) => {\n      return char1.rank - char2.rank;\n    });\n  return (\n    <Paper sx={{\n      padding: \"8px\"\n    }}>\n      <Typography variant=\"h6\" color=\"inherit\" component=\"div\" id=\"roster\">Raiding Roster</Typography>\n\n      <Grid container spacing={{ xs: 1, md: 2, lx: 4 }} columns={{ xs: 4, sm: 8, md: 12 }}>\n        {filteredRoster.filter((char) => { return char.rank <= 3 }).map((char, index) => {\n          return (\n            <Grid item xs={2} sm={4} md={4} key={index}>\n              {CharChard(char)}\n            </Grid>\n          );\n        })}\n      </Grid>\n    </Paper>\n  );\n}\n\nexport default Roster;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Box } from '@mui/material';\nimport React from 'react';\n\n\nexport default function ScrollTo(props: {anchorId: string, children: React.ReactElement}) {\n  const { children, anchorId } = props;\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    const anchor = (\n      (event.target as HTMLDivElement).ownerDocument || document\n    ).querySelector(anchorId);\n\n    if (anchor) {\n      anchor.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center',\n      });\n    }\n  };\n\n  return (\n      <Box\n        onClick={handleClick}\n      >\n        {children}\n      </Box>\n  );\n}","import React from 'react';\nimport AppBar from \"@mui/material/AppBar/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar/Toolbar\";\nimport Typography from '@mui/material/Typography';\nimport Avatar from \"@mui/material/Avatar/Avatar\";\nimport ScrollTo from './helpers/ScrollTo';\nimport { Button } from '@mui/material';\n\n\nfunction TopBar() {\n  return (\n    <AppBar position=\"sticky\">\n      <Toolbar >\n        <Avatar alt=\"Genericus Namus Crest\" src=\"https://render-eu.worldofwarcraft.com/guild/tabards/emblem_181.png\" />\n        <Typography variant=\"h6\" color=\"inherit\" component=\"div\" sx={{ flexGrow: 1 }}>\n          Generics Namus\n        </Typography>\n        <ScrollTo anchorId=\"#about-text\">\n          <Button color=\"inherit\">About</Button>\n        </ScrollTo>\n        <ScrollTo anchorId=\"#hall-of-fame\">\n          <Button color=\"inherit\">Hall of Fame</Button>\n        </ScrollTo>\n        <ScrollTo anchorId=\"#mplus\">\n          <Button color=\"inherit\">Mythic Plus Activity</Button>\n        </ScrollTo>\n        <ScrollTo anchorId=\"#roster\">\n          <Button color=\"inherit\">Roster</Button>\n        </ScrollTo>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default TopBar;","import React from 'react';\nimport Typography from '@mui/material/Typography';\nimport { Paper } from '@mui/material';\n\n\nfunction About() {\n  return (\n    <Paper sx ={{\n      marginTop: \"8px\",\n      padding: \"8px\"\n    }}>\n      <Typography variant=\"h6\" color=\"inherit\" component=\"div\" id=\"about-text\">\n        About Generics Namus\n      </Typography>\n      <Typography variant=\"body1\">\n        Founded in March 2018, <b>Genericus Namus</b> is a horde guild located on the Magtheridon realm.\n      </Typography>\n      <Typography variant=\"body1\">\n        With membership numbers exceeding 100 members and with an\n        overall focus on the social aspect of the game, it truly is the\n        feeling community which is the foundation of the guild. While\n        raiding undeniably plays an important role within the guild, it\n        is the guild ethos of nurturing the social aspect of the game\n        that ensures that the guild is hale and hearty.\n      </Typography>\n      <Typography variant=\"body1\">\n        Among its accomplishments, <b>Genericus Namus</b> can boast all Ahead Of The Curve achivements\n        since the release of Battle For Azeroth, a few mythic boss kills and most Glory runs as well. \n        All of these while mantaining a fun and welcoming environment.\n      </Typography>\n    </Paper>\n  );\n};\n\nexport default About;","import React from 'react';\nimport { ImageList, ImageListItem, ImageListItemBar, Paper, Typography } from '@mui/material';\nimport gallery from \"../json/gallery.json\";\nimport { Gallery } from '../models/gallery';\n\nconst images: Gallery = gallery;\nfunction HallOfFame() {\n  return (\n    <Paper sx={{\n      marginTop: \"8px\",\n      marginBottom: \"8px\",\n      padding: \"8px\"\n    }} id=\"hall-of-fame\">\n      <Typography variant=\"h6\" color=\"inherit\" component=\"div\">Hall of Fame</Typography>\n      <ImageList cols={4}>\n        {images.images.map((item) => (\n          <ImageListItem key={item.sort}>\n            <img\n              src={`${item.url}`}\n              alt={item.title}\n              loading=\"lazy\"\n            />\n            <ImageListItemBar\n              title={item.title}\n              subtitle={item.desc}\n            />\n          </ImageListItem>\n        ))}\n      </ImageList>\n    </Paper>\n  );\n};\n\nexport default HallOfFame;","export enum ClassColors {\n  \"DEATH KNIGHT\" = \"#C41E3A\",\n  \"DEMON HUNTER\" = \"#A330C9\",\n  DRUID = \"#FF7C0A\",\n  HUNTER = \"#AAD372\",\n  MAGE = \"#3FC7EB\",\n  MONK = \"#00FF98\",\n  PALADIN = \"#F48CBA\",\n  PRIEST = \"#FFFFFF\",\n  ROGUE = \"#FFF468\",\n  SHAMAN = \"#0070DD\",\n  WARLOCK = \"#8788EE\",\n  WARRIOR = \"#C69B6D\",\n}\n","import React from 'react';\nimport runs from \"../json/mplusruns.json\";\nimport Grid from \"@mui/material/Grid/Grid\";\nimport { EnrichedCharacter, MediaType } from '../models/models';\nimport { Avatar, Card, CardContent, Paper, Stack, Typography } from '@mui/material';\nimport { GuildRun } from '../models/raider.ts.model';\nimport roster from \"../json/roster.json\";\nimport { ClassColors } from '../models/classColors.enum';\n\nconst filteredRoster: EnrichedCharacter[] = roster;\n\nfunction MplusRuns() {\n\n  const guildRuns = JSON.parse(JSON.stringify(runs)) as GuildRun[]; // parse dates, lazy mode\n  guildRuns.sort((run1, run2) => {\n    if (run1.date > run2.date) return -1;\n    if (run1.date < run2.date) return 1;\n    return 0;\n  });\n\n  return (\n    <Paper sx={{\n      padding: \"8px\",\n      marginBottom: \"8px\",\n    }}>\n      <Typography variant=\"h6\" color=\"inherit\" component=\"div\" id=\"mplus\">Mythic Plus Activity</Typography>\n      <Grid container spacing={{ xs: 1, md: 2, lx: 4 }} columns={{ xs: 4, sm: 8, md: 12 }}>\n        {guildRuns.map((run, index) => {\n          if (index > 8) return \"\";\n          return (\n            <GuildRunChard run={run} index={index} />\n          );\n        })}\n      </Grid>\n      <Typography variant=\"subtitle2\" color=\"inherit\" component=\"div\">Mythic Plus info powered by <a href=\"https://raider.io\">Raider.io</a></Typography>\n    </Paper>\n  );\n}\n\nexport default MplusRuns;\n\nfunction GuildRunChard(props: { run: GuildRun, index: number }) {\n  const { run, index } = props;\n  return (\n    <Grid item xs={2} sm={4} md={4} key={index}>\n      <Card>\n        <CardContent>\n          <Typography variant=\"h5\" component=\"div\">\n            {run.dungeon} +{run.level}\n          </Typography>\n          <ClassColloredNames names={run.names}/>\n          <Avatars names={run.names} />\n          <Typography variant=\"body2\">\n            {run.success ? `Beat the timmer!` : `Sadly, went overtime.`}\n          </Typography>\n        </CardContent>\n      </Card>\n\n    </Grid>\n  );\n}\n\nfunction Avatars(props: { names: string[] }) {\n  const { names } = props;\n  const elements = names.map((name) => {\n    const avatar = filteredRoster.find((char) => {\n      return char.name === name;\n    });\n    return (\n      <Avatar alt={name} src={avatar?.media?.find((media) => { return media.key === MediaType.AVATAR })?.value} />\n    );\n  });\n  return (<Stack direction=\"row\" spacing={2}>\n    {elements}\n  </Stack>);\n\n}\n\nfunction ClassColloredNames(props: {names:string[]}){\n  const elements = props.names.map((name)=>{\n    return <Typography color={getClassColor(name)}>{name}&nbsp;</Typography>\n  });\n  return  <Stack direction=\"row\" spacing={2}>{elements}</Stack>\n}\n\nfunction getClassColor(name: string) {\n  type ClassName = keyof typeof ClassColors;\n  const klass = roster.find((member) => {\n    return member.name === name;\n  })?.playable_class.name.en_GB;\n  if(!klass) return \"#000000\"\n  return ClassColors[klass.toUpperCase() as ClassName];\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport CssBaseline from '@mui/material/CssBaseline';\n// import App from './App';\nimport Roster from './Components/Roster';\nimport reportWebVitals from './reportWebVitals';\nimport { createTheme } from '@mui/material/styles';\nimport { grey } from '@mui/material/colors';\nimport ThemeProvider from \"@mui/material/styles/ThemeProvider\";\nimport TopBar from './Components/TopBar';\nimport About from './Components/About';\nimport HallOfFame from './Components/HallOfFame';\nimport { Container } from '@mui/material';\nimport MplusRuns from './Components/MplusRuns';\n\n\nconst theme = createTheme({\n  palette: {\n    mode: \"dark\",\n    primary: {\n      main: grey[900],\n    },\n    secondary: {\n      main: grey[700],\n    },\n  },\n  spacing: 2\n});\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <ThemeProvider theme={theme}>\n      <Container maxWidth=\"xl\">\n        <TopBar />\n        <About />\n        <HallOfFame />\n        <MplusRuns />\n        <Roster />\n      </Container>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}